import sys

def mread(file):
    return open(file,'r',encoding='UTF8').readlines()             

def mmax3(vv,sssize):
    toks=vv.strip().replace('[','').replace(']','').replace(',','').split(' ')
    if len(toks)!=sssize:exit(1)  
    maxn=0  
    idx='none'
    for i in range(len(toks)-3):
        tmp=float(toks[i+2])
        if tmp>maxn:
            maxn=tmp
            idx=i+2    
    return idx                
def mprint(sssize,att, idx,d,ssalign,reals,count,countall):
    ones=att[idx].split('], [')   
    gates=att[idx+1].strip().replace('[','').replace(']','').replace(',','').split(' ') 
    if len(gates)!=8:exit(1)
    k=-1
    for i in range(8):        
        for j in range(sssize):
            k+=1
            if i==4:    
                key=d+' '+str(i)                    
                alignidx=mmax3(ones[k],sssize)           
                if j>1 and j <sssize-1:
                    if reals[alignidx] in ssalign[reals[j]]: 
                       count[0]+=1  
                                 
                    if len(ssalign[reals[j]])>0:countall[0]+=1            
    return 'done'

def jcheck(ls,lv,la):
 kkk=0         
 count=[0]        
 countall=[0]
 zjy='sdfskfjalskjfd'
 for i in range(len(ls)):
   toks=la[i].strip().split(' ')
   ssalign=[]
   src='bos '+ls[i].strip()+' eos'
   src=src.replace('@@ ',zjy).strip().split(' ')            
   reals=[]   
   for j in range(len(src)):
       tmp=src[j].split(zjy)
       for ppp in range(len(tmp)):
           reals.append(j-2)         
   for j in range(len(src)-3):
       ssalign.append({})
   for j in range(len(toks)):
       tmp=toks[j].split('-')       
       if len(tmp)==2:ssalign[int(tmp[1])][int(tmp[0])]='done'            
   for j in range(6):
       if j==0:mprint(len(reals),lv, kkk,str(j), ssalign,reals,count,countall)          
       kkk+=2
   for j in range(6):              
       kkk+=2             
       kkk+=2
 print(float(count[0])/countall[0])
         
ls=mread(sys.argv[1])
lv=mread(sys.argv[2])
la=mread(sys.argv[3])       
jcheck(ls,lv,la)  
            
